{"ast":null,"code":"var _jsxFileName = \"/media/cedric/964AD0C44AD0A1F3/Users/Ced/code/Projects/portfolio/frontend/src/components/showContacts.jsx\";\nimport React, { Component } from \"react\";\nimport \"../login.css\";\nimport \"normalize.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport ContactList from \"./ContactList\";\n\nclass ShowContacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8082/api/contacts\").then(res => {\n      this.setState({\n        contacts: res.data\n      });\n    }).catch(err => {\n      console.log(\"Error from ShowContacts\");\n    });\n  }\n\n  render() {\n    const contacts = this.state.contacts;\n    console.log(\"Print contacts \" + contacts);\n    let contactList;\n\n    if (!contacts) {\n      contactList = \"there are no contact records!\";\n    } else {\n      contactList = contacts.map((contact, k) => React.createElement(ContactList, {\n        contact: contact,\n        key: k,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"main\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"containerShow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, contactList)));\n  }\n\n}\n\nexport default ShowContacts;","map":{"version":3,"sources":["/media/cedric/964AD0C44AD0A1F3/Users/Ced/code/Projects/portfolio/frontend/src/components/showContacts.jsx"],"names":["React","Component","axios","Link","ContactList","ShowContacts","state","contacts","componentDidMount","get","then","res","setState","data","catch","err","console","log","render","contactList","map","contact","k"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC3B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD2B;AAAA;;AAInCC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,KAAK,CACFO,GADH,CACO,oCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAEI,GAAG,CAACE;AADF,OAAd;AAGD,KANH,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KATH;AAUD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAMX,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBV,QAAhC;AACA,QAAIY,WAAJ;;AAEA,QAAI,CAACZ,QAAL,EAAe;AACbY,MAAAA,WAAW,GAAG,+BAAd;AACD,KAFD,MAEO;AACPA,MAAAA,WAAW,GAAGZ,QAAQ,CAACa,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAiB,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAED,OAAtB;AAA+B,QAAA,GAAG,EAAEC,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B,CAAd;AAAwF;;AAGxF,WAAS;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBH,WAAvB,CADA,CADO,CAAT;AAMD;;AAtCkC;;AAyCrC,eAAed,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../login.css\";\r\nimport \"normalize.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ContactList from \"./ContactList\";\r\n\r\n\r\n\r\nclass ShowContacts extends Component {\r\n  state = {\r\n    contacts: []\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8082/api/contacts\")\r\n      .then(res => {\r\n        this.setState({\r\n          contacts: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error from ShowContacts\");\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    const contacts = this.state.contacts;\r\n    console.log(\"Print contacts \" + contacts);\r\n    let contactList;\r\n\r\n    if (!contacts) {\r\n      contactList = \"there are no contact records!\";\r\n    } else {\r\n    contactList = contacts.map((contact, k) =>  <ContactList contact={contact} key={k} />);}\r\n    \r\n\r\n    return ( <main id=\"main\">\r\n      <section className=\"containerShow\">\r\n      <div className=\"list\">{contactList}</div>\r\n      </section>\r\n    </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowContacts;\r\n"]},"metadata":{},"sourceType":"module"}