{"ast":null,"code":"import _objectSpread from \"/media/cedric/964AD0C44AD0A1F3/Users/Ced/code/Projects/portfolio/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/cedric/964AD0C44AD0A1F3/Users/Ced/code/Projects/portfolio/frontend/src/components/contact.jsx\";\nimport React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contactInfo: {\n        date: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // Call the server\n      // const firstName = this.usernameFirst.current.value;\n      // const lastName = this.usernameLast.current.value;\n      // const email = this.userEmail.current.value;\n      // const message = this.userMessage.current.value;\n\n      const data = {\n        date: this.state.contactInfo.date,\n        firstName: this.state.contactInfo.firstName,\n        lastName: this.state.contactInfo.lastName,\n        email: this.state.contactInfo.email,\n        message: this.state.contactInfo.message\n      };\n      axios.post(\"http://localhost:8082/api/contacts\", data).then(res => {\n        this.setState({\n          date: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          message: \"\"\n        });\n        this.props.history.push(\"/\");\n      }).catch(err => {\n        console.log(\"Error in Create Contact!\", this.state.contactInfo.firstName);\n      });\n    };\n\n    this.handleChangeContact = e => {\n      // dont update the state directly clone the state then let react update the state\n      const contactInfo = _objectSpread({}, this.state.contactInfo);\n\n      contactInfo[e.currentTarget.name] = e.currentTarget.value;\n      this.setState({\n        contactInfo\n      });\n    };\n  }\n\n  render() {\n    const contactInfo = this.state.contactInfo;\n    return React.createElement(\"main\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contact-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userFirstName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      autoFocus: true,\n      type: \"text\",\n      className: \"form-control\",\n      value: contactInfo.firstName // controlled Element set value to state property\n      ,\n      onChange: this.handleChangeContact,\n      name: \"firstName\" // e.currentarget.name\n      // ref={this.usernameFirst}\n      ,\n      id: \"userFirstName\",\n      placeholder: \"First name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-6 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userLastName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: contactInfo.lastName,\n      onChange: this.handleChangeContact,\n      name: \"lastName\" // e.currentarget.name\n      // ref={this.usernameLast}\n      ,\n      id: \"userLastName\",\n      placeholder: \"Last name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-auto mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"E-mail\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"inputGroupPrepend2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"@\")), React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      value: contactInfo.email,\n      onChange: this.handleChangeContact,\n      name: \"email\" // e.currentarget.name\n      // ref={this.userEmail}\n      ,\n      id: \"userEmail\",\n      placeholder: \"E-mail\",\n      \"aria-describedby\": \"inputGroupPrepend2\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: contactInfo.message,\n      onChange: this.handleChangeContact,\n      name: \"message\" // e.currentarget.name\n      // ref={this.userMessage}\n      ,\n      id: \"userMessage\",\n      rows: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-info\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/media/cedric/964AD0C44AD0A1F3/Users/Ced/code/Projects/portfolio/frontend/src/components/contact.jsx"],"names":["React","Component","axios","Contact","state","contactInfo","date","firstName","lastName","email","message","handleSubmit","e","preventDefault","data","post","then","res","setState","props","history","push","catch","err","console","log","handleChangeContact","currentTarget","name","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    contactInfo: {\n      date:\"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      message: \"\"\n    }\n  };\n\n  // focus on usernameFirst\n  // componentDidMount() {\n  //   this.usernameFirst.current.focus();\n  // }\n\n  // ref to get input field user input\n  // usernameFirst = React.createRef();\n  // usernameLast = React.createRef();\n  // userEmail = React.createRef();\n  // userMessage = React.createRef();\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // Call the server\n    // const firstName = this.usernameFirst.current.value;\n    // const lastName = this.usernameLast.current.value;\n    // const email = this.userEmail.current.value;\n    // const message = this.userMessage.current.value;\n    const data = {\n      date: this.state.contactInfo.date,\n      firstName: this.state.contactInfo.firstName,\n      lastName: this.state.contactInfo.lastName,\n      email: this.state.contactInfo.email,\n      message: this.state.contactInfo.message\n    };\n\n    axios\n      .post(\"http://localhost:8082/api/contacts\", data)\n      .then(res => {\n        this.setState({\n          date: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          message: \"\"\n        });\n        this.props.history.push(\"/\");\n      })\n      .catch(err => {\n        console.log(\n          \"Error in Create Contact!\",\n          this.state.contactInfo.firstName\n        );\n      });\n  };\n\n  handleChangeContact = e => {\n    // dont update the state directly clone the state then let react update the state\n    const contactInfo = { ...this.state.contactInfo };\n    contactInfo[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ contactInfo });\n  };\n\n  render() {\n    const { contactInfo } = this.state;\n\n    return (\n      <main id=\"main\">\n        <div className=\"contact-container\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-row\">\n              <div className=\"col-md-6 mb-3\">\n                <label htmlFor=\"userFirstName\">First name</label>\n                <input\n                  autoFocus\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={contactInfo.firstName} // controlled Element set value to state property\n                  onChange={this.handleChangeContact}\n                  name=\"firstName\" // e.currentarget.name\n                  // ref={this.usernameFirst}\n                  id=\"userFirstName\"\n                  placeholder=\"First name\"\n                  required\n                />\n              </div>\n              <div className=\"col-md-6 mb-3\">\n                <label htmlFor=\"userLastName\">Last name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={contactInfo.lastName}\n                  onChange={this.handleChangeContact}\n                  name=\"lastName\" // e.currentarget.name\n                  // ref={this.usernameLast}\n                  id=\"userLastName\"\n                  placeholder=\"Last name\"\n                  required\n                />\n              </div>\n              <div className=\"form-row\">\n                <div className=\"col-auto mb-3\">\n                  <label htmlFor=\"userEmail\">E-mail</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span\n                        className=\"input-group-text\"\n                        id=\"inputGroupPrepend2\"\n                      >\n                        @\n                      </span>\n                    </div>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      value={contactInfo.email}\n                      onChange={this.handleChangeContact}\n                      name=\"email\" // e.currentarget.name\n                      // ref={this.userEmail}\n                      id=\"userEmail\"\n                      placeholder=\"E-mail\"\n                      aria-describedby=\"inputGroupPrepend2\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"userMessage\">Message</label>\n              <textarea\n                className=\"form-control\"\n                value={contactInfo.message}\n                onChange={this.handleChangeContact}\n                name=\"message\" // e.currentarget.name\n                // ref={this.userMessage}\n                id=\"userMessage\"\n                rows=\"3\"\n              />\n            </div>\n            <button className=\"btn btn-info\" type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}